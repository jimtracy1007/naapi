name: Build and Publish to NPM

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org
          cache: 'yarn'

      - name: Install deps
        run: yarn install

      - name: Build
        run: npm run build

      - name: Check version
        id: version-check
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          # Handle case where package.json might not exist in the "before" commit (e.g., first push to a branch)
          LAST=$(git show ${{ github.event.before }}:package.json | node -p "JSON.parse(require('fs').readFileSync(0)).version" || echo "")

          if [[ "$CURRENT" != "$LAST" ]]; then
            echo "Version changed: $LAST -> $CURRENT."
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT has not changed."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if version already published
        id: published-check
        if: steps.version-check.outputs.changed == 'true'
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          if npm view ${{ fromJson(readFile('package.json')).name }}@$CURRENT version > /dev/null 2>&1; then
            echo "Version $CURRENT is already published on NPM. Skipping publish."
            echo "published=true" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT is not published on NPM. Proceeding to publish."
            echo "published=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish if version changed and not already published
        if: steps.version-check.outputs.changed == 'true' && steps.published-check.outputs.published == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
